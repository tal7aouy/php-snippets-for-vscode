{
  "eco": {
    "prefix": "eco",
    "body": ["echo \"$0\";"],
    "description": "'echo' statement"
  },
  "pri": {
    "prefix": "pri",
    "body": ["print(\"$0\");"],
    "description": "'print' statement"
  },
  "dump": {
    "prefix": "dump",
    "body": ["var_dump ($0);"],
    "description": "'var_dump' statement"
  },
  "pre_dump": {
    "prefix": "dump",
    "body": ["echo \"<pre>\";\nvar_dump ($0);\necho \"</pre>\";"],
    "description": "'var_dump' statement"
  },
  "fore": {
    "prefix": "fore",
    "body": ["foreach ($1 as $${2:item}) {", "\t$0", "}"],
    "description": "foreach(iterable_expr as $value) {...}"
  },
  "forek": {
    "prefix": "forek",
    "body": ["foreach ($1 as $${2:key} => $${3:index}) {", "\t$0", "}"],
    "description": "foreach(iterable_expr as $key => $value) {...}"
  },

  "prif": {
    "prefix": "prif",
    "body": ["private function $1($2)", "{", "\t$0", "}"],
    "description": "private function."
  },
  "prisf": {
    "prefix": "prisf",
    "body": ["private static function $1($2)", "{", "\t$0", "}"],
    "description": "private static function."
  },
  "prof": {
    "prefix": "prof",
    "body": ["protected function $1($2)", "{", "\t$0", "}"],
    "description": "protected function."
  },
  "prosf": {
    "prefix": "prosf",
    "body": ["protected static function $1($2)", "{", "\t$0", "}"],
    "description": "protected static function."
  },
  "pubf": {
    "prefix": "pubf",
    "body": ["public function $1($2)", "{", "\t$0", "}"],
    "description": "public function."
  },
  "pubsf": {
    "prefix": "pubsf",
    "body": ["public static function $1($2)", "{", "\t$0", "}"],
    "description": "public static function."
  },
  "fn": {
    "prefix": "fn",
    "body": ["fn($0) => $1"],
    "description": "Arrow function"
  },
  "inc": {
    "prefix": "inc",
    "body": ["include \"$0\";"],
    "description": "'include' statement"
  },
  "inco": {
    "prefix": "inco",
    "body": ["include_once \"$0\";"],
    "description": "'include_once' statement"
  },
  "req": {
    "prefix": "req",
    "body": ["require \"$0\";"],
    "description": "'require' statement"
  },
  "reqo": {
    "prefix": "reqo",
    "body": ["require_once \"$0\";"],
    "description": "'require_once' statement"
  },
  "thr": {
    "prefix": "thr",
    "body": ["throw new ${1:\\Exception}(\"${2:Error Processing Request}\");"],
    "description": "throw new"
  },
  "ns": {
    "prefix": "ns",
    "body": ["namespace $0;"],
    "description": "namespace statement"
  },
  "mt": {
    "prefix": "mt",
    "body": ["match($0) {\n$1 => $2\n};"],
    "description": "match expression"
  },
  "def": {
    "prefix": "def",
    "body": ["define($0,$1);"],
    "description": "define your constant"
  },
  "G": {
    "prefix": "G",
    "body": ["$_GET[$0];"],
    "description": "PHP Superglobal $_GET"
  },
  "P": {
    "prefix": "P",
    "body": ["$_POST[$0];"],
    "description": "PHP Superglobal $_POST"
  },
  "SE": {
    "prefix": "SE",
    "body": ["$_SERVER[$0];"],
    "description": "PHP Superglobal $_SERVER"
  },
  "SESS": {
    "prefix": "SESS",
    "body": ["$_SESSION[$0];"],
    "description": "PHP Superglobal $_SESSION"
  },
  "REQ": {
    "prefix": "REQ",
    "body": ["$_REQUEST[$0];"],
    "description": "PHP Superglobal $_REQUEST"
  },
  "FI": {
    "prefix": "FI",
    "body": ["$_FILE[$0][$1];"],
    "description": "PHP Superglobal $_FILET"
  }
}
